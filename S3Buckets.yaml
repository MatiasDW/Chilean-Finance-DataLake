AWSTemplateFormatVersion: '2010-09-09' # Version funcional
Description: Cripto-Scraper-Binance-Central-Bank - Data Lake base (raw/clean) + Glue Database

Parameters:
  ProjectName:
    Type: String
    Default: Finance-information
  Stage:
    Type: String
    AllowedValues: [dev, prod, qa]
    Default: dev

Mappings:
  LifecycleRules:
    Defaults:
      ExpireDays: 365 # Cambia a 90 si no necesitas histórico largo

Resources:
  RawBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-${Stage}-raw'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      VersioningConfiguration: { Status: Enabled }
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:  #Si luego quieres control fino (rotación, grants a servicios, auditar uso de llaves), cambias a SSE-KMS.
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: ExpireOld
            Status: Enabled
            ExpirationInDays: !FindInMap [LifecycleRules, Defaults, ExpireDays]
      Tags:
        - Key: SERVICE
          Value: data-lake
        - Key: STAGE
          Value: !Ref Stage
        - Key: MANAGER
          Value: "mdavila"
        - Key: BILLING_CLIENT
          Value: "contabilidad/finanzas"

  RawBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RawBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DenyInsecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${RawBucket}"
              - !Sub "arn:aws:s3:::${RawBucket}/*"
            Condition:
              Bool:
                aws:SecureTransport: "false"
          - Sid: DenyUnencryptedObjectUploads
            Effect: Deny
            Principal: "*"
            Action: "s3:PutObject"
            Resource: !Sub "arn:aws:s3:::${RawBucket}/*"
            Condition:
              Null:
                s3:x-amz-server-side-encryption: "true"

  CleanBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-${Stage}-clean'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      VersioningConfiguration: { Status: Enabled }
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: SERVICE
          Value: data-lake
        - Key: STAGE
          Value: !Ref Stage
        - Key: MANAGER
          Value: "mdavila"
        - Key: BILLING_CLIENT
          Value: "contabilidad/finanzas"

  CleanBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CleanBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DenyInsecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${CleanBucket}"
              - !Sub "arn:aws:s3:::${CleanBucket}/*"
            Condition:
              Bool:
                aws:SecureTransport: "false"
          - Sid: DenyUnencryptedObjectUploads
            Effect: Deny
            Principal: "*"
            Action: "s3:PutObject"
            Resource: !Sub "arn:aws:s3:::${CleanBucket}/*"
            Condition:
              Null:
                s3:x-amz-server-side-encryption: "true"

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Sub '${ProjectName}_${Stage}_db'
        Description: Glue Catalog for curated/clean tables

Outputs:  #Exportacion de Buckets. 
  RawBucketName:
    Value: !Ref RawBucket
    Export:
      Name: !Sub '${ProjectName}-${Stage}-raw'

  CleanBucketName:
    Value: !Ref CleanBucket
    Export:
      Name: !Sub '${ProjectName}-${Stage}-clean'

  GlueDatabaseName:
    Value: !Ref GlueDatabase
    Export:
      Name: !Sub '${ProjectName}-${Stage}-glue-db'
